import streamlit as st
import pandas as pd
from llama_index.llms.groq import Groq
from llama_index.core.agent import ReActAgent
import matplotlib.pyplot as plt

# Streamlit page configuration
st.set_page_config(layout="wide")
st.title("üìä Marketing Data Visualizer with AI-Generated Code")

# Sidebar for user input
st.sidebar.header("1Ô∏è‚É£ Upload & Configure")
uploaded_file = st.sidebar.file_uploader("Upload your dataset (CSV file)", type=["csv"])
api_key = st.sidebar.text_input("Enter Groq API Key", type="password")

if uploaded_file and api_key:
    # Load CSV into DataFrame
    df = pd.read_csv(uploaded_file)
    
    # Show first few rows of the data
    st.write("### Preview of the dataset", df.head())
    
    # User prompt for AI-generated code
    user_prompt = st.text_area("üí¨ Custom AI Prompt (Optional)", "Generate a pie chart based on categories in the data.")

    if st.button("üöÄ Generate Visualization & Insights"):
        # Initialize the Groq model (use the provided API key)
        llm = Groq(model="llama3-70b-8192", api_key=api_key)
        
        # Initialize ReActAgent with the Groq LLM
        agent = ReActAgent.from_tools([], llm=llm, verbose=True)
        
        # Generate AI prompt based on user input
        ai_prompt = f"""
        Based on the following dataset, generate Python code to create a chart:
        {df.head().to_string()}
        {user_prompt}
        """
        
        # Get the Python code from the agent
        response = agent.chat(ai_prompt)
        generated_code = response.response if response.response else "No code generated by AI."
        
        # Display the generated code (for transparency and debugging)
        st.subheader("üí¨ Generated Python Code:")
        st.code(generated_code, language="python")
        
        # Try to execute the generated code and display the chart
        try:
            exec(generated_code)
            st.pyplot()  # Display the generated plot (from executed code)
        except Exception as e:
            st.error(f"Error executing the generated code: {e}")

else:
    st.info("Upload a dataset and enter your API key to proceed.")
